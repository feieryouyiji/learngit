git diff 1.txt 			--代表工作区与暂存区文件差异
git diff --cached 1.txt 	--代表暂存区与版本库中的差异
git diff HEAD -- 2.txt		--代表工作区与版本库中的差异

------工作区文件撤销----------
git checkout -- 1.txt		--如果暂存区中的1.txt没有提交到版本库,那么工作区和暂存区一样,反之与版本库一样

------staged暂存区文件撤销-----

git reset -- HEAD 1.txt		--把暂存区的1.txt撤销重新放回工作区

------整个撤销----------------

git reset --hard "ea34578d5496d7dd233c827ed32a8cd576c5ee85"

------删除工作区的文件----------
rm 1.txt -- 这个时候你确定需要从版本库中删除 1.txt 需要 git rm 1.txt 然后再 git commit -m "rm 1.txt"
如果你不想从版本库中删除,那可以恢复 git checkout -- 1.txt 工作区中文件就会恢复
// 当然你如果真的想删 可以直接git rm 1.txt

-------
-------

git remote add origin https://github.com/feieryouyiji/learngit.git  #会将本地仓库关联到远程仓库

git push -u origin master    # 将本地仓库的master分支中所有内容全部推送到远程仓库的master分支,并且自动关联远程仓库的master分支(因为-u这个参数)


-------------------------------------------------------

git checkout -b dev     	 ## 会在最新的一个节点新建一个新的分支dev,并将HEAD指向dev
git checkout master  		 ## 切换到主分支

当在dev分支上改动了一些文件,并提交到了版本仓库,这个时候master仓库还没有,所以我们需要将master分支合并到dev分支
git merge dev   //当前应该在主分支上,代表主分支master快速移动到dev上
git branch -d dev  ## 删掉dev分支

